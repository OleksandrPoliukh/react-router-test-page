{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Code\\\\Study\\\\react-demo\\\\src\\\\ProductsPage\\\\ProductsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductsPage = ({\n  data\n}) => {\n  _s();\n  const [companies, setCompanies] = useState(data);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const updateCompanies = params => {\n    const filteredCompanies = data.filter(item => {\n      const {\n        companyName\n      } = item;\n      if (params.get(\"name\")) {\n        return companyName.toLower;\n      }\n    });\n  };\n  const handleChange = e => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"companyList\",\n      children: companies.map(({\n        id,\n        companyName,\n        companyDescription\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: companyDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductsPage, \"bpYetN2Wf6o06xDqMAfhkDbD2f0=\", false, function () {\n  return [useSearchParams];\n});\n_c = ProductsPage;\nexport default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductsPage","data","_s","companies","setCompanies","searchParams","setSearchParams","updateCompanies","params","filteredCompanies","filter","item","companyName","get","toLower","handleChange","e","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","companyDescription","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Code/Study/react-demo/src/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst ProductsPage = ({data}) => {\r\n    const [companies, setCompanies] = useState(data);\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const updateCompanies = (params) => {\r\n        const filteredCompanies = data.filter((item) => {\r\n            const {companyName} = item;\r\n            if (params.get(\"name\")) {\r\n                return companyName.toLower\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <input type=\"text\" onChange={handleChange} />\r\n        <ul className=\"companyList\">\r\n            {companies.map(({id, companyName, companyDescription}) => (\r\n                <li key={id}>\r\n                    <h2>{companyName}</h2>\r\n                    <p>{companyDescription}</p>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACQ,IAAI,CAAC;EAChD,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGX,eAAe,CAAC,CAAC;EAEzD,MAAMY,eAAe,GAAIC,MAAM,IAAK;IAChC,MAAMC,iBAAiB,GAAGR,IAAI,CAACS,MAAM,CAAEC,IAAI,IAAK;MAC5C,MAAM;QAACC;MAAW,CAAC,GAAGD,IAAI;MAC1B,IAAIH,MAAM,CAACK,GAAG,CAAC,MAAM,CAAC,EAAE;QACpB,OAAOD,WAAW,CAACE,OAAO;MAC9B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK,CAE5B,CAAC;EAED,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEJ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7C1B,OAAA;MAAI2B,SAAS,EAAC,aAAa;MAAAP,QAAA,EACtBd,SAAS,CAACsB,GAAG,CAAC,CAAC;QAACC,EAAE;QAAEd,WAAW;QAAEe;MAAkB,CAAC,kBACjD9B,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,EAAKL;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtB1B,OAAA;UAAAoB,QAAA,EAAIU;QAAkB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFtBG,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACH,CAAC;AAEX,CAAC;AAACrB,EAAA,CA9BIF,YAAY;EAAA,QAE0BL,eAAe;AAAA;AAAAiC,EAAA,GAFrD5B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}